name: A/B Testing

env:
  DOTNET_VERSION: '7.0.x'

on:
  workflow_dispatch:

jobs:
  build-web-project:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: './ABTesting/src/FrontEnd/FrontEnd'
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main
      - name: 'Setup dotnet'
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: 'Install Dependencies'
        run: dotnet restore
      - name: 'Build project'
        run: dotnet build --no-restore

  build-container-image:
    runs-on: ubuntu-latest
    needs: [build-web-project]
    defaults:
      run:
        working-directory: './ABTesting/src/FrontEnd'
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AB_AZURE_CREDENTIALS }}

      - name: Get ACR name
        id: getacrname
        run: |
          acrName=$(az acr list --resource-group ${{ secrets.AB_AZURE_RG }} --query "[0].name" -o tsv)
          echo "::set-output name=acrName::$acrName"

      - name: Get ACR Credentials
        id: getacrcreds
        run: |
          loginServer=$(az acr list --resource-group ${{ secrets.AB_AZURE_RG }} --query "[0].loginServer" -o tsv)
          loginName=$(az acr credential show -n ${{ steps.getacrname.outputs.acrName }} --resource-group ${{ secrets.AZURE_RG }} --query username -o tsv)
          password=$(az acr credential show -n ${{ steps.getacrname.outputs.acrName }} --resource-group ${{ secrets.AZURE_RG }} --query "passwords[0].value" -o tsv)
          echo "::set-output name=loginServer::$loginServer"
          echo "::set-output name=loginName::$loginName"
          echo "::set-output name=password::$password"

      - name: 'Build and Push API Image to ACR'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ steps.getacrcreds.outputs.loginServer }}
          username: ${{ steps.getacrname.outputs.acrName }}
          password: ${{ steps.getacrcreds.outputs.password }}
      - run: |
          docker build . -t ${{ steps.getacrcreds.outputs.loginServer }}/frontend:${{ github.sha }}
          docker push ${{ steps.getacrcreds.outputs.loginServer }}/frontend:${{ github.sha }}

  deploy-to-app:
    runs-on: ubuntu-latest
    needs: [build-container-image]
    defaults:
      run:
        working-directory: './ABTesting/src/FrontEnd'
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AB_AZURE_CREDENTIALS }}
          
      - name: Get ACR Login Server
        id: getacrserver
        run: |
          loginServer=$(az acr list --resource-group ${{ secrets.AB_AZURE_RG }} --query "[0].loginServer" -o tsv)
          echo "::set-output name=loginServer::$loginServer"

      - name: 'Deploy Container App'
        uses: Azure/cli@v1
        with:
          inlineScript: |
            echo "Installing containerapp extension"
            az extension add -n containerapp --yes
            echo "Starting Deploying"
            az containerapp update -n frontend -g ${{ secrets.AB_AZURE_RG }} -i ${{ steps.getacrserver.outputs.loginServer }}/frontend:${{ github.sha }} --debug  